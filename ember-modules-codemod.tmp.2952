[2,"inject",3,"addon/components/ownership-selection-modal.js","import Ember from 'ember';\n\nconst { Component, inject } = Ember;\n\nexport default Component.extend({"]
[2,"inject",7,"addon/exports/service.js","  Service,\n  computed,\n  inject,\n  isEmpty\n} = Ember;"]
[2,"inject",3,"addon/helpers/sign-url.js","import Ember from 'ember';\n\nconst { Helper, inject, observer } = Ember;\n\nexport default Helper.extend({"]
[2,"inject",3,"addon/mixins/activity-runner.js","import Ember from 'ember';\n\nconst { Mixin, inject, run } = Ember;\n\nexport default Mixin.create({"]
[2,"testing",26,"addon/mixins/auth.js","\n  sessionInvalidated() {\n    if (!Ember.testing) {\n      window.location.replace(Configuration.logoutRedirectUrl);\n    }"]
[2,"inject",4,"addon/mixins/currency-data-loader.js","import { formatPrice } from 'ember-upf-utils/helpers/format-price';\n\nconst { Mixin, inject, computed, get } = Ember;\n\nexport function price(dependentKey, options = {}) {"]
[2,"inject",6,"addon/mixins/has-access-panel.js","const {\n  Mixin,\n  inject\n} = Ember;\n"]
[2,"inject",5,"addon/mixins/bulk-archive.js","const {\n  Mixin,\n  inject\n} = Ember;\n"]
[2,"inject",6,"addon/mixins/input-i18n-errors.js","  Mixin,\n  observer,\n  inject\n} = Ember;\n"]
[2,"inject",6,"addon/mixins/model-selection-storage.js","  Mixin,\n  computed,\n  inject\n} = Ember;\n"]
[2,"inject",4,"addon/ownership-updater/service.js"," import { pluralize } from 'ember-inflector';\n\nconst { Service, String, inject } = Ember;\n\nexport default Service.extend({"]
[2,"String",4,"addon/ownership-updater/service.js"," import { pluralize } from 'ember-inflector';\n\nconst { Service, String, inject } = Ember;\n\nexport default Service.extend({"]
[2,"inject",8,"addon/notifications/service.js","  RSVP,\n  computed,\n  inject,\n  isArray\n} = Ember;"]
